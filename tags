!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Category	Document/Category.php	/^abstract class Category extends BaseCategory$/;"	c
Category	Entity/Category.php	/^abstract class Category extends BaseCategory$/;"	c
Category	Model/Category.php	/^abstract class Category$/;"	c
CategoryChoiceField	Form/CategoryChoiceField.php	/^class CategoryChoiceField extends ChoiceField$/;"	c
CategoryController	Controller/CategoryController.php	/^class CategoryController extends Controller$/;"	c
CategoryRepository	Document/CategoryRepository.php	/^class CategoryRepository extends ObjectRepository implements CategoryRepositoryInterface$/;"	c
CategoryRepository	Entity/CategoryRepository.php	/^class CategoryRepository extends ObjectRepository implements CategoryRepositoryInterface$/;"	c
CategoryRepositoryInterface	Model/CategoryRepositoryInterface.php	/^interface CategoryRepositoryInterface extends RepositoryInterface$/;"	i
CategoryRepositoryTest	Tests/Model/CategoryRepositoryTest.php	/^class CategoryRepositoryTest extends WebTestCase$/;"	c
CategoryTest	Tests/Model/CategoryTest.php	/^class CategoryTest extends WebTestCase$/;"	c
ClassMetadataListener	Doctrine/ODM/ClassMetadataListener.php	/^class ClassMetadataListener$/;"	c
ClassMetadataListener	Doctrine/ORM/ClassMetadataListener.php	/^class ClassMetadataListener$/;"	c
DoctrineObjectTransformer	Form/ValueTransformer/DoctrineObjectTransformer.php	/^class DoctrineObjectTransformer extends BaseValueTransformer$/;"	c
ForumBundle	ForumBundle.php	/^class ForumBundle extends Bundle$/;"	c
ForumController	Controller/ForumController.php	/^class ForumController extends Controller$/;"	c
ForumExtension	DependencyInjection/ForumExtension.php	/^class ForumExtension extends Extension$/;"	c
ForumExtension	Twig/Extension/ForumExtension.php	/^class ForumExtension extends \\Twig_Extension$/;"	c
ForumHelper	Templating/Helper/ForumHelper.php	/^class ForumHelper extends Helper$/;"	c
Inflector	Util/Inflector.php	/^class Inflector$/;"	c
InflectorTest	Tests/Util/InflectorTest.php	/^class InflectorTest extends \\PHPUnit_Framework_TestCase$/;"	c
MetadataTest	Tests/Model/MetadataTest.php	/^class MetadataTest extends WebTestCase$/;"	c
NewTopicForm	Form/NewTopicForm.php	/^class NewTopicForm extends Form$/;"	c
ObjectRepository	Document/ObjectRepository.php	/^abstract class ObjectRepository extends DocumentRepository implements RepositoryInterface$/;"	c
ObjectRepository	Entity/ObjectRepository.php	/^abstract class ObjectRepository extends EntityRepository implements RepositoryInterface$/;"	c
Post	Document/Post.php	/^abstract class Post extends BasePost$/;"	c
Post	Entity/Post.php	/^abstract class Post extends BasePost$/;"	c
Post	Model/Post.php	/^abstract class Post$/;"	c
PostController	Controller/PostController.php	/^class PostController extends Controller$/;"	c
PostForm	Form/PostForm.php	/^class PostForm extends Form$/;"	c
PostRepository	Document/PostRepository.php	/^class PostRepository extends ObjectRepository implements PostRepositoryInterface$/;"	c
PostRepository	Entity/PostRepository.php	/^class PostRepository extends ObjectRepository implements PostRepositoryInterface$/;"	c
PostRepositoryInterface	Model/PostRepositoryInterface.php	/^interface PostRepositoryInterface extends RepositoryInterface$/;"	i
PostRepositoryTest	Tests/Model/PostRepositoryTest.php	/^class PostRepositoryTest extends WebTestCase$/;"	c
PostTest	Tests/Model/PostTest.php	/^class PostTest extends WebTestCase$/;"	c
RepositoryInterface	Model/RepositoryInterface.php	/^interface RepositoryInterface$/;"	i
Search	Search/Search.php	/^class Search$/;"	c
SearchForm	Form/SearchForm.php	/^class SearchForm extends Form$/;"	c
Topic	Document/Topic.php	/^abstract class Topic extends BaseTopic$/;"	c
Topic	Entity/Topic.php	/^abstract class Topic extends BaseTopic$/;"	c
Topic	Model/Topic.php	/^abstract class Topic$/;"	c
TopicController	Controller/TopicController.php	/^class TopicController extends Controller$/;"	c
TopicRepository	Document/TopicRepository.php	/^class TopicRepository extends ObjectRepository implements TopicRepositoryInterface$/;"	c
TopicRepository	Entity/TopicRepository.php	/^class TopicRepository extends ObjectRepository implements TopicRepositoryInterface$/;"	c
TopicRepositoryInterface	Model/TopicRepositoryInterface.php	/^interface TopicRepositoryInterface extends RepositoryInterface$/;"	i
TopicRepositoryTest	Tests/Model/TopicRepositoryTest.php	/^class TopicRepositoryTest extends WebTestCase$/;"	c
TopicTest	Tests/Model/TopicTest.php	/^class TopicTest extends WebTestCase$/;"	c
WebTestCase	Test/WebTestCase.php	/^class WebTestCase extends \\Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase$/;"	c
__construct	Doctrine/ODM/ClassMetadataListener.php	/^    public function __construct(array $classes)$/;"	f
__construct	Doctrine/ORM/ClassMetadataListener.php	/^    public function __construct(array $classes)$/;"	f
__construct	Form/CategoryChoiceField.php	/^    public function __construct($key, array $options = array())$/;"	f
__construct	Form/NewTopicForm.php	/^    public function __construct($name, $object, $validator, array $options = array())$/;"	f
__construct	Form/ValueTransformer/DoctrineObjectTransformer.php	/^    public function __construct($repository)$/;"	f
__construct	Model/Category.php	/^    public function __construct()$/;"	f
__construct	Model/Post.php	/^    public function __construct()$/;"	f
__construct	Model/Topic.php	/^    public function __construct()$/;"	f
__construct	Templating/Helper/ForumHelper.php	/^    public function __construct(RouterInterface $router, $nbPostsPerPage)$/;"	f
__toString	Model/Category.php	/^    public function __toString()$/;"	f
__toString	Model/Post.php	/^    public function __toString()$/;"	f
__toString	Model/Topic.php	/^    public function __toString()$/;"	f
addPost	Model/Topic.php	/^    public function addPost(Post $post)$/;"	f
after	Tests/Model/TopicRepositoryTest.php	/^        $after = array_keys(get_defined_vars());$/;"	v
allClasses	Tests/Model/MetadataTest.php	/^            $allClasses = $om->getMetadataFactory()->getAllMetadata();$/;"	v
application	Test/WebTestCase.php	/^        $application = new Application($kernel);$/;"	v
author	Model/Post.php	/^        $this->author = $author;$/;"	v
author	Model/Post.php	/^    protected $author;$/;"	v
author	Model/Topic.php	/^        $this->author = $author;$/;"	v
author	Model/Topic.php	/^    protected $author;$/;"	v
author	Tests/Model/PostTest.php	/^        $author = $class->getFieldMapping('author');$/;"	v
autoLink	Templating/Helper/ForumHelper.php	/^    public function autoLink($text)$/;"	f
before	Tests/Model/TopicRepositoryTest.php	/^        $before = array_keys(get_defined_vars());$/;"	v
boot	ForumBundle.php	/^    public function boot()$/;"	f
c1	Tests/Model/TopicRepositoryTest.php	/^        $c1 = $this->createCategory('c1');$/;"	v
c2	Tests/Model/TopicRepositoryTest.php	/^        $c2 = $this->createCategory('c2');$/;"	v
categories	Controller/CategoryController.php	/^        $categories = $this['forum.category_repository']->findAll();$/;"	v
categories	Tests/Model/CategoryRepositoryTest.php	/^        $categories = $repository->findAll();$/;"	v
category	Controller/CategoryController.php	/^        $category = $this['forum.category_repository']->findOneBySlug($slug);$/;"	v
category	Controller/TopicController.php	/^            $category = $this['forum.category_repository']->findOneBySlug($categorySlug);$/;"	v
category	Controller/TopicController.php	/^            $category = null;$/;"	v
category	Model/Topic.php	/^        $this->category = $category;$/;"	v
category	Model/Topic.php	/^    protected $category;$/;"	v
category	Tests/Model/CategoryRepositoryTest.php	/^        $category = new $this->categoryClass();$/;"	v
category	Tests/Model/CategoryTest.php	/^        $category = $om->getRepository('ForumBundle:Category')->findOneBySlug($category->getSlug());$/;"	v
category	Tests/Model/CategoryTest.php	/^        $category = new $this->categoryClass();$/;"	v
category	Tests/Model/PostRepositoryTest.php	/^        $category = new $this->categoryClass();$/;"	v
category	Tests/Model/PostTest.php	/^        $category = new $this->categoryClass();$/;"	v
category	Tests/Model/TopicRepositoryTest.php	/^        $category = new $this->categoryClass();$/;"	v
category	Tests/Model/TopicTest.php	/^        $category = $class->getFieldMapping('category');$/;"	v
category	Tests/Model/TopicTest.php	/^        $category = $this->getMock($this->categoryClass);$/;"	v
category	Tests/Model/TopicTest.php	/^        $category = new $this->categoryClass();$/;"	v
category1	Tests/Model/CategoryRepositoryTest.php	/^        $category1 = new $this->categoryClass();$/;"	v
category2	Tests/Model/CategoryRepositoryTest.php	/^        $category2 = new $this->categoryClass();$/;"	v
category3	Tests/Model/CategoryRepositoryTest.php	/^        $category3 = new $this->categoryClass();$/;"	v
categoryClass	Test/WebTestCase.php	/^        $this->categoryClass = $om->getRepository('ForumBundle:Category')->getObjectClass();$/;"	v
categoryClass	Test/WebTestCase.php	/^    protected $categoryClass;$/;"	v
categoryField	Form/NewTopicForm.php	/^        $categoryField = new CategoryChoiceField('category', array($/;"	v
class	Tests/Model/CategoryTest.php	/^        $class = $this->getService('forum.category_repository')->getClassMetadata();$/;"	v
class	Tests/Model/PostTest.php	/^        $class = $this->getService('forum.post_repository')->getClassMetadata();$/;"	v
class	Tests/Model/PostTest.php	/^        $class = $this->postClass;$/;"	v
class	Tests/Model/TopicTest.php	/^        $class = $this->getService('forum.topic_repository')->getClassMetadata();$/;"	v
classMetadata	Doctrine/ODM/ClassMetadataListener.php	/^        $classMetadata = $eventArgs->getClassMetadata();$/;"	v
classMetadata	Doctrine/ORM/ClassMetadataListener.php	/^        $classMetadata = $eventArgs->getClassMetadata();$/;"	v
classes	Doctrine/ODM/ClassMetadataListener.php	/^        $this->classes = $classes;$/;"	v
classes	Doctrine/ODM/ClassMetadataListener.php	/^    protected $classes;$/;"	v
classes	Doctrine/ORM/ClassMetadataListener.php	/^        $this->classes = $classes;$/;"	v
classes	Doctrine/ORM/ClassMetadataListener.php	/^    protected $classes;$/;"	v
cleanUp	Document/ObjectRepository.php	/^    public function cleanUp()$/;"	f
cleanUp	Entity/ObjectRepository.php	/^    public function cleanUp()$/;"	f
cleanUp	Model/RepositoryInterface.php	/^    public function cleanUp();$/;"	f
configLoad	DependencyInjection/ForumExtension.php	/^    public function configLoad($config, ContainerBuilder $container)$/;"	f
configName	DependencyInjection/ForumExtension.php	/^            $configName = $model.'_class';$/;"	v
configName	DependencyInjection/ForumExtension.php	/^            $configName = $model.'_form';$/;"	v
configure	Form/NewTopicForm.php	/^    public function configure()$/;"	f
configure	Form/PostForm.php	/^    public function configure()$/;"	f
configure	Form/SearchForm.php	/^    public function configure()$/;"	f
createAction	Controller/PostController.php	/^    public function createAction($topicId)$/;"	f
createAction	Controller/TopicController.php	/^    public function createAction($categorySlug = null)$/;"	f
createCategory	Tests/Model/TopicRepositoryTest.php	/^    protected function createCategory($name)$/;"	f
createForm	Controller/PostController.php	/^    protected function createForm($name, Topic $topic)$/;"	f
createForm	Controller/TopicController.php	/^    protected function createForm($name, Category $category = null)$/;"	f
createPost	Tests/Model/TopicRepositoryTest.php	/^    protected function createPost($name, $topic, $days)$/;"	f
createTopic	Tests/Model/TopicRepositoryTest.php	/^    protected function createTopic($name, $category)$/;"	f
createdAt	Model/Post.php	/^            $this->createdAt = new \\DateTime('now');$/;"	v
createdAt	Model/Post.php	/^        $this->createdAt = $date;$/;"	v
createdAt	Model/Post.php	/^    protected $createdAt;$/;"	v
createdAt	Model/Topic.php	/^        $this->createdAt = new \\DateTime('now');$/;"	v
createdAt	Model/Topic.php	/^    protected $createdAt;$/;"	v
date	Tests/Model/PostTest.php	/^        $date = new \\DateTime('now');$/;"	v
date	Tests/Model/TopicRepositoryTest.php	/^        $date = new \\DateTime(sprintf('-%s day', $days));$/;"	v
date	Tests/Model/TopicTest.php	/^        $date = new \\DateTime('-2 day');$/;"	v
date	Tests/Model/TopicTest.php	/^        $date = new \\DateTime('now');$/;"	v
decrementCategoryNumPosts	Model/Post.php	/^    public function decrementCategoryNumPosts()$/;"	f
decrementCategoryNumPosts	Model/Topic.php	/^    public function decrementCategoryNumPosts()$/;"	f
decrementCategoryNumTopics	Model/Topic.php	/^    public function decrementCategoryNumTopics()$/;"	f
decrementNumPosts	Model/Category.php	/^    public function decrementNumPosts($quantity = 1)$/;"	f
decrementNumPosts	Model/Topic.php	/^    public function decrementNumPosts()$/;"	f
decrementNumTopics	Model/Category.php	/^    public function decrementNumTopics()$/;"	f
decrementNumViews	Model/Topic.php	/^    public function decrementNumViews()$/;"	f
decrementTopicNumPosts	Model/Post.php	/^    public function decrementTopicNumPosts()$/;"	f
description	Model/Category.php	/^        $this->description = $description;$/;"	v
description	Model/Category.php	/^    protected $description;$/;"	v
document	Tests/Model/TopicRepositoryTest.php	/^            $document = ${$var};$/;"	v
eventManager	ForumBundle.php	/^        $eventManager = $om->getEventManager();$/;"	v
fieldMapping	Doctrine/ODM/ClassMetadataListener.php	/^        $fieldMapping = $classMetadata->getFieldMapping($field);$/;"	v
findAll	Document/CategoryRepository.php	/^    public function findAll()$/;"	f
findAll	Document/TopicRepository.php	/^    public function findAll($asPaginator = false)$/;"	f
findAll	Entity/CategoryRepository.php	/^    public function findAll()$/;"	f
findAll	Entity/TopicRepository.php	/^    public function findAll($asPaginator = false)$/;"	f
findAll	Model/CategoryRepositoryInterface.php	/^    public function findAll();$/;"	f
findAll	Model/TopicRepositoryInterface.php	/^    public function findAll($asPaginator);$/;"	f
findAllByCategory	Document/TopicRepository.php	/^    public function findAllByCategory($category, $asPaginator = false)$/;"	f
findAllByCategory	Entity/TopicRepository.php	/^    public function findAllByCategory($category, $asPaginator = false)$/;"	f
findAllByCategory	Model/TopicRepositoryInterface.php	/^    public function findAllByCategory($category, $asPaginator);$/;"	f
findAllByTopic	Document/PostRepository.php	/^    public function findAllByTopic($topic, $asPaginator = false)$/;"	f
findAllByTopic	Entity/PostRepository.php	/^    public function findAllByTopic($topic, $asPaginator = false)$/;"	f
findAllByTopic	Model/PostRepositoryInterface.php	/^    public function findAllByTopic($topic, $asPaginator);$/;"	f
findAllIndexById	Document/CategoryRepository.php	/^    public function findAllIndexById()$/;"	f
findAllIndexById	Entity/CategoryRepository.php	/^    public function findAllIndexById()$/;"	f
findAllIndexById	Model/CategoryRepositoryInterface.php	/^    public function findAllIndexById();$/;"	f
findLatestPosted	Document/TopicRepository.php	/^    public function findLatestPosted($number)$/;"	f
findLatestPosted	Entity/TopicRepository.php	/^    public function findLatestPosted($number)$/;"	f
findLatestPosted	Model/TopicRepositoryInterface.php	/^    public function findLatestPosted($number);$/;"	f
findOneById	Document/PostRepository.php	/^    public function findOneById($id)$/;"	f
findOneById	Document/TopicRepository.php	/^    public function findOneById($id)$/;"	f
findOneById	Entity/PostRepository.php	/^    public function findOneById($id)$/;"	f
findOneById	Entity/TopicRepository.php	/^    public function findOneById($id)$/;"	f
findOneById	Model/PostRepositoryInterface.php	/^    public function findOneById($id);$/;"	f
findOneById	Model/TopicRepositoryInterface.php	/^    public function findOneById($id);$/;"	f
findOneBySlug	Document/CategoryRepository.php	/^    public function findOneBySlug($slug)$/;"	f
findOneBySlug	Entity/CategoryRepository.php	/^    public function findOneBySlug($slug)$/;"	f
findOneBySlug	Model/CategoryRepositoryInterface.php	/^    public function findOneBySlug($slug);$/;"	f
findRecentByTopic	Document/PostRepository.php	/^    public function findRecentByTopic($topic, $number)$/;"	f
findRecentByTopic	Entity/PostRepository.php	/^    public function findRecentByTopic($topic, $number)$/;"	f
findRecentByTopic	Model/PostRepositoryInterface.php	/^    public function findRecentByTopic($topic, $number);$/;"	f
firstPost	Model/Topic.php	/^            $this->firstPost = $post;$/;"	v
firstPost	Model/Topic.php	/^        $this->firstPost = $post;$/;"	v
firstPost	Model/Topic.php	/^    protected $firstPost;$/;"	v
firstPost	Tests/Model/TopicTest.php	/^        $firstPost = $class->getFieldMapping('firstPost');$/;"	v
firstReply	Tests/Model/TopicTest.php	/^        $firstReply = new $this->postClass();$/;"	v
form	Controller/ForumController.php	/^        $form = new SearchForm('search', $search, $this['validator']);$/;"	v
form	Controller/PostController.php	/^        $form = $this->createForm('forum_post_new', $topic);$/;"	v
form	Controller/TopicController.php	/^        $form = $this->createForm('forum_topic_new', $category);$/;"	v
form	Controller/TopicController.php	/^        $form = new $topicFormClass($name, $topic, $this['validator'], array('categoryRepository' => $this['forum.category_repository']));$/;"	v
formClass	Controller/PostController.php	/^        $formClass = $this->container->getParameter('forum.post_form.class');$/;"	v
foundCategory	Tests/Model/CategoryRepositoryTest.php	/^        $foundCategory = $repository->findOneBySlug($category->getSlug());$/;"	v
foundPost	Tests/Model/PostRepositoryTest.php	/^        $foundPost = $repository->findOneById($post->getId());$/;"	v
foundTopic	Tests/Model/TopicRepositoryTest.php	/^        $foundTopic = $repository->findOneById($topic->getId());$/;"	v
generateSlug	Model/Category.php	/^    public function generateSlug()$/;"	f
getAlias	DependencyInjection/ForumExtension.php	/^    public function getAlias()$/;"	f
getAuthor	Model/Post.php	/^    public function getAuthor()$/;"	f
getAuthor	Model/Topic.php	/^    public function getAuthor()$/;"	f
getBootedKernel	Test/WebTestCase.php	/^    protected function getBootedKernel()$/;"	f
getCategory	Model/Topic.php	/^    public function getCategory()$/;"	f
getCreatedAt	Model/Post.php	/^    public function getCreatedAt()$/;"	f
getCreatedAt	Model/Topic.php	/^    public function getCreatedAt()$/;"	f
getDescription	Model/Category.php	/^    public function getDescription()$/;"	f
getFirstPost	Model/Topic.php	/^    public function getFirstPost()$/;"	f
getId	Model/Category.php	/^    public function getId()$/;"	f
getId	Model/Post.php	/^    public function getId()$/;"	f
getId	Model/Topic.php	/^    public function getId()$/;"	f
getIsBuried	Model/Topic.php	/^    public function getIsBuried()$/;"	f
getIsClosed	Model/Topic.php	/^    public function getIsClosed()$/;"	f
getIsPinned	Model/Topic.php	/^    public function getIsPinned()$/;"	f
getLastPost	Model/Category.php	/^    public function getLastPost()$/;"	f
getLastPost	Model/Topic.php	/^    public function getLastPost()$/;"	f
getLastTopic	Model/Category.php	/^    public function getLastTopic()$/;"	f
getMessage	Model/Post.php	/^    public function getMessage()$/;"	f
getName	Model/Category.php	/^    public function getName()$/;"	f
getName	Templating/Helper/ForumHelper.php	/^    public function getName()$/;"	f
getName	Twig/Extension/ForumExtension.php	/^    public function getName()$/;"	f
getNamespace	DependencyInjection/ForumExtension.php	/^    public function getNamespace()$/;"	f
getNumPosts	Model/Category.php	/^    public function getNumPosts()$/;"	f
getNumPosts	Model/Topic.php	/^    public function getNumPosts()$/;"	f
getNumReplies	Model/Topic.php	/^    public function getNumReplies()$/;"	f
getNumTopics	Model/Category.php	/^    public function getNumTopics()$/;"	f
getNumViews	Model/Topic.php	/^    public function getNumViews()$/;"	f
getNumber	Model/Post.php	/^    public function getNumber()$/;"	f
getObjectClass	Document/ObjectRepository.php	/^    public function getObjectClass()$/;"	f
getObjectClass	Entity/ObjectRepository.php	/^    public function getObjectClass()$/;"	f
getObjectClass	Model/RepositoryInterface.php	/^    public function getObjectClass();$/;"	f
getObjectIdentifier	Document/ObjectRepository.php	/^    public function getObjectIdentifier()$/;"	f
getObjectIdentifier	Entity/ObjectRepository.php	/^    public function getObjectIdentifier()$/;"	f
getObjectIdentifier	Model/RepositoryInterface.php	/^    public function getObjectIdentifier();$/;"	f
getObjectManager	Document/ObjectRepository.php	/^    public function getObjectManager()$/;"	f
getObjectManager	Entity/ObjectRepository.php	/^    public function getObjectManager()$/;"	f
getObjectManager	Model/RepositoryInterface.php	/^    public function getObjectManager();$/;"	f
getPosition	Model/Category.php	/^    public function getPosition()$/;"	f
getPulledAt	Model/Topic.php	/^    public function getPulledAt()$/;"	f
getRenderer	Controller/CategoryController.php	/^    protected function getRenderer()$/;"	f
getRenderer	Controller/ForumController.php	/^    protected function getRenderer()$/;"	f
getRenderer	Controller/PostController.php	/^    protected function getRenderer()$/;"	f
getRenderer	Controller/TopicController.php	/^    protected function getRenderer()$/;"	f
getRepository	Form/ValueTransformer/DoctrineObjectTransformer.php	/^    public function getRepository()$/;"	f
getRepository	ForumBundle.php	/^    public static function getRepository($objectManager, $objectClass)$/;"	f
getService	Test/WebTestCase.php	/^    protected function getService($name, $kernel = null)$/;"	f
getSetNumber	Tests/Model/PostTest.php	/^    public function getSetNumber()$/;"	f
getSlug	Model/Category.php	/^    public function getSlug()$/;"	f
getSubject	Model/Topic.php	/^    public function getSubject()$/;"	f
getTokenParsers	Twig/Extension/ForumExtension.php	/^    public function getTokenParsers()$/;"	f
getTopic	Model/Post.php	/^    public function getTopic()$/;"	f
getTopicNumPages	Templating/Helper/ForumHelper.php	/^    public function getTopicNumPages(Topic $topic)$/;"	f
getUpdatedAt	Model/Post.php	/^    public function getUpdatedAt()$/;"	f
getXsdValidationBasePath	DependencyInjection/ForumExtension.php	/^    public function getXsdValidationBasePath()$/;"	f
hasService	Test/WebTestCase.php	/^    protected function hasService($name, $kernel = null)$/;"	f
id	Model/Category.php	/^    protected $id;$/;"	v
id	Model/Post.php	/^    protected $id;$/;"	v
id	Model/Topic.php	/^    protected $id;$/;"	v
incrementCategoryNumPosts	Model/Post.php	/^    public function incrementCategoryNumPosts()$/;"	f
incrementCategoryNumTopics	Model/Topic.php	/^    public function incrementCategoryNumTopics()$/;"	f
incrementNumPosts	Model/Category.php	/^    public function incrementNumPosts($quantity = 1)$/;"	f
incrementNumPosts	Model/Topic.php	/^    public function incrementNumPosts()$/;"	f
incrementNumTopics	Model/Category.php	/^    public function incrementNumTopics()$/;"	f
incrementNumViews	Model/Topic.php	/^    public function incrementNumViews()$/;"	f
incrementTopicNumPosts	Model/Post.php	/^    public function incrementTopicNumPosts()$/;"	f
incrementTopicNumViews	Document/TopicRepository.php	/^    public function incrementTopicNumViews($topic)$/;"	f
incrementTopicNumViews	Entity/TopicRepository.php	/^    public function incrementTopicNumViews($topic)$/;"	f
incrementTopicNumViews	Model/TopicRepositoryInterface.php	/^    public function incrementTopicNumViews($topic);$/;"	f
indexAction	Controller/ForumController.php	/^    public function indexAction()$/;"	f
input	Test/WebTestCase.php	/^        $input = new ArrayInput($params);$/;"	v
isBuried	Model/Topic.php	/^        $this->isBuried = (bool) $isBuried;$/;"	v
isBuried	Model/Topic.php	/^    protected $isBuried;$/;"	v
isClosed	Model/Topic.php	/^        $this->isClosed = $this->isPinned = $this->isBuried = false;$/;"	v
isClosed	Model/Topic.php	/^        $this->isClosed = (bool) $isClosed;$/;"	v
isClosed	Model/Topic.php	/^    protected $isClosed;$/;"	v
isPinned	Model/Topic.php	/^        $this->isPinned = (bool) $isPinned;$/;"	v
isPinned	Model/Topic.php	/^    protected $isPinned;$/;"	v
kernel	Test/WebTestCase.php	/^        $kernel = $this->createKernel();$/;"	v
kernel	Test/WebTestCase.php	/^        $this->kernel = $this->createKernel();$/;"	v
kernel	Test/WebTestCase.php	/^    protected $kernel;$/;"	v
lastPage	Controller/PostController.php	/^            $lastPage = $this['templating.helper.forum']->getTopicNumPages($topic);$/;"	v
lastPost	Model/Category.php	/^        $this->lastPost = $post;$/;"	v
lastPost	Model/Category.php	/^    protected $lastPost;$/;"	v
lastPost	Model/Topic.php	/^        $this->lastPost = $post;$/;"	v
lastPost	Model/Topic.php	/^    protected $lastPost;$/;"	v
lastPost	Tests/Model/CategoryTest.php	/^        $lastPost = $class->getFieldMapping('lastPost');$/;"	v
lastPost	Tests/Model/TopicTest.php	/^        $lastPost = $class->getFieldMapping('lastPost');$/;"	v
lastTopic	Model/Category.php	/^        $this->lastTopic = $topic;$/;"	v
lastTopic	Model/Category.php	/^    protected $lastTopic;$/;"	v
lastTopic	Tests/Model/CategoryTest.php	/^        $lastTopic = $class->getFieldMapping('lastTopic');$/;"	v
lastTopics	Tests/Model/TopicRepositoryTest.php	/^        $lastTopics = $this->om->getRepository('ForumBundle:Topic')->findLatestPosted($number);$/;"	v
listAction	Controller/CategoryController.php	/^    public function listAction()$/;"	f
listAction	Controller/TopicController.php	/^    public function listAction($category = null)$/;"	f
loadClassMetadata	Doctrine/ODM/ClassMetadataListener.php	/^    public function loadClassMetadata(LoadClassMetadataEventArgs $eventArgs)$/;"	f
loadClassMetadata	Doctrine/ORM/ClassMetadataListener.php	/^    public function loadClassMetadata(LoadClassMetadataEventArgs $eventArgs)$/;"	f
loader	DependencyInjection/ForumExtension.php	/^        $loader = new XmlFileLoader($container, __DIR__ . '\/..\/Resources\/config');$/;"	v
message	Model/Post.php	/^        $this->message = $message;$/;"	v
message	Model/Post.php	/^    protected $message;$/;"	v
name	Model/Category.php	/^        $this->name = $name;$/;"	v
name	Model/Category.php	/^    protected $name;$/;"	v
nbPostsPerPage	Templating/Helper/ForumHelper.php	/^        $this->nbPostsPerPage = $nbPostsPerPage;$/;"	v
nbPostsPerPage	Templating/Helper/ForumHelper.php	/^    protected $nbPostsPerPage;$/;"	v
newAction	Controller/PostController.php	/^    public function newAction($topicId)$/;"	f
newAction	Controller/TopicController.php	/^    public function newAction($categorySlug = null)$/;"	f
numPosts	Model/Category.php	/^        $this->numPosts = 0;$/;"	v
numPosts	Model/Category.php	/^        $this->numPosts = \\intval($numPosts);$/;"	v
numPosts	Model/Category.php	/^    protected $numPosts;$/;"	v
numPosts	Model/Topic.php	/^        $this->numPosts = \\intval($numPosts);$/;"	v
numPosts	Model/Topic.php	/^    protected $numPosts;$/;"	v
numTopics	Model/Category.php	/^        $this->numTopics = 0;$/;"	v
numTopics	Model/Category.php	/^        $this->numTopics = \\intval($numTopics);$/;"	v
numTopics	Model/Category.php	/^    protected $numTopics;$/;"	v
numViews	Model/Topic.php	/^        $this->numViews = $this->numPosts = 0;$/;"	v
numViews	Model/Topic.php	/^        $this->numViews = \\intval($numViews);$/;"	v
numViews	Model/Topic.php	/^    protected $numViews;$/;"	v
number	Model/Post.php	/^      $this->number = $number;$/;"	v
number	Model/Post.php	/^    protected $number = null;$/;"	v
number	Tests/Model/TopicRepositoryTest.php	/^        $number = 3;$/;"	v
objectManager	Controller/PostController.php	/^        $objectManager = $this['forum.post_repository']->getObjectManager();$/;"	v
objectManager	Controller/TopicController.php	/^        $objectManager = $this['forum.topic_repository']->getObjectManager();$/;"	v
objectsToStrings	Tests/Model/TopicRepositoryTest.php	/^    protected function objectsToStrings(array $objects)$/;"	f
om	ForumBundle.php	/^        $om = $this->container->get('forum.object_manager');$/;"	v
om	Test/WebTestCase.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/CategoryRepositoryTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/CategoryRepositoryTest.php	/^        $om = parent::setUp();$/;"	v
om	Tests/Model/CategoryTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/CategoryTest.php	/^        $om = parent::setUp();$/;"	v
om	Tests/Model/MetadataTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/PostRepositoryTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/PostRepositoryTest.php	/^        $this->om = $om = parent::setUp();$/;"	v
om	Tests/Model/PostRepositoryTest.php	/^    protected $om;$/;"	v
om	Tests/Model/PostTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/PostTest.php	/^        $om = parent::setUp();$/;"	v
om	Tests/Model/TopicRepositoryTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/TopicRepositoryTest.php	/^        $this->om = $om = parent::setUp();$/;"	v
om	Tests/Model/TopicRepositoryTest.php	/^    protected $om;$/;"	v
om	Tests/Model/TopicTest.php	/^        $om = $this->getService('forum.object_manager');$/;"	v
om	Tests/Model/TopicTest.php	/^        $om = parent::setUp();$/;"	v
ouput	Test/WebTestCase.php	/^        $ouput = new NullOutput(0);$/;"	v
p1	Tests/Model/TopicRepositoryTest.php	/^        $p1 = $this->createPost('p1', $t1, 8);$/;"	v
p2	Tests/Model/TopicRepositoryTest.php	/^        $p2 = $this->createPost('p2', $t1, 7);$/;"	v
p3	Tests/Model/TopicRepositoryTest.php	/^        $p3 = $this->createPost('p3', $t2, 6);$/;"	v
p4	Tests/Model/TopicRepositoryTest.php	/^        $p4 = $this->createPost('p4', $t2, 5);$/;"	v
p5	Tests/Model/TopicRepositoryTest.php	/^        $p5 = $this->createPost('p5', $t3, 4);$/;"	v
p6	Tests/Model/TopicRepositoryTest.php	/^        $p6 = $this->createPost('p6', $t3, 3);$/;"	v
p7	Tests/Model/TopicRepositoryTest.php	/^        $p7 = $this->createPost('p7', $t4, 2);$/;"	v
p8	Tests/Model/TopicRepositoryTest.php	/^        $p8 = $this->createPost('p8', $t4, 1);$/;"	v
page	Controller/ForumController.php	/^                $page = $this['request']->query->get('page', 1);$/;"	v
page	Controller/TopicController.php	/^            $page = $this['request']->query->get('page', 1);$/;"	v
page	Controller/TopicController.php	/^        $page = $this['request']->query->get('page', 1);$/;"	v
parameterName	DependencyInjection/ForumExtension.php	/^            $parameterName = sprintf('forum.%s_form.class', $model);$/;"	v
parameterName	DependencyInjection/ForumExtension.php	/^            $parameterName = sprintf('forum.%s_object.class', $model);$/;"	v
position	Model/Category.php	/^        $this->position = 0;$/;"	v
position	Model/Category.php	/^        $this->position = \\intval($position);$/;"	v
position	Model/Category.php	/^    protected $position;$/;"	v
post	Controller/PostController.php	/^        $post = $form->getData();$/;"	v
post	Controller/PostController.php	/^        $post = new $postClass();$/;"	v
post	Controller/TopicController.php	/^        $post = new $postClass();$/;"	v
post	Tests/Model/CategoryTest.php	/^        $post = new $this->postClass();$/;"	v
post	Tests/Model/PostRepositoryTest.php	/^        $post = new $this->postClass();$/;"	v
post	Tests/Model/PostTest.php	/^        $post = $om->getRepository('ForumBundle:Post')->findOneById($post->getId());$/;"	v
post	Tests/Model/PostTest.php	/^        $post = new $class();$/;"	v
post	Tests/Model/PostTest.php	/^        $post = new $this->postClass();$/;"	v
post	Tests/Model/TopicRepositoryTest.php	/^        $post = new $this->postClass();$/;"	v
post	Tests/Model/TopicTest.php	/^        $post = $this->getMock($this->postClass);$/;"	v
post	Tests/Model/TopicTest.php	/^        $post = new $this->postClass();$/;"	v
post1	Tests/Model/CategoryTest.php	/^        $post1 = new $this->postClass();$/;"	v
post1	Tests/Model/TopicRepositoryTest.php	/^        $post1 = new $this->postClass();$/;"	v
post2	Tests/Model/CategoryTest.php	/^        $post2 = new $this->postClass();$/;"	v
post2	Tests/Model/PostTest.php	/^        $post2 = new $this->postClass();$/;"	v
post2	Tests/Model/TopicRepositoryTest.php	/^        $post2 = new $this->postClass();$/;"	v
post3	Tests/Model/TopicRepositoryTest.php	/^        $post3 = new $this->postClass();$/;"	v
postClass	Controller/PostController.php	/^        $postClass = $this['forum.post_repository']->getObjectClass();$/;"	v
postClass	Controller/TopicController.php	/^        $postClass = $this['forum.post_repository']->getObjectClass();$/;"	v
postClass	Test/WebTestCase.php	/^        $this->postClass = $om->getRepository('ForumBundle:Post')->getObjectClass();$/;"	v
postClass	Test/WebTestCase.php	/^    protected $postClass;$/;"	v
postFormClass	Controller/TopicController.php	/^        $postFormClass = $this->container->getParameter('forum.post_form.class');$/;"	v
postMessage	Tests/Model/CategoryTest.php	/^        $postMessage = 'first topic post';$/;"	v
postMessage	Tests/Model/CategoryTest.php	/^        $postMessage = 'second topic post';$/;"	v
postTopic	Tests/Model/PostTest.php	/^        $postTopic = $post->getTopic();$/;"	v
posts	Controller/TopicController.php	/^            $posts = $this['forum.post_repository']->findAllByTopic($topic, true);$/;"	v
posts	Controller/TopicController.php	/^            $posts = $this['forum.post_repository']->findRecentByTopic($topic, 30);$/;"	v
pulledAt	Model/Topic.php	/^        $this->pulledAt = $this->getLastPost()->getCreatedAt();$/;"	v
pulledAt	Model/Topic.php	/^    protected $pulledAt;$/;"	v
qb	Entity/PostRepository.php	/^        $qb = $this->createQueryBuilder('post')$/;"	v
qb	Entity/PostRepository.php	/^        $qb = $this->createQueryBuilder('post');$/;"	v
qb	Entity/TopicRepository.php	/^        $qb = $this->createQueryBuilder('topic');$/;"	v
query	Document/PostRepository.php	/^        $query = $this->createQuery()$/;"	v
query	Document/TopicRepository.php	/^        $query = $this->createQuery('t')$/;"	v
query	Document/TopicRepository.php	/^        $query = $this->createQuery()$/;"	v
query	Document/TopicRepository.php	/^        $query = $this->createQuery()->sort('pulledAt', 'DESC')->limit($number);$/;"	v
query	Document/TopicRepository.php	/^        $query = $this->createQuery()->sort('pulledAt', 'DESC');$/;"	v
query	Entity/TopicRepository.php	/^        $query = $this->createQueryBuilder('topic')$/;"	v
query	Search/Search.php	/^    public $query;$/;"	v
regexp	Document/PostRepository.php	/^        $regexp = new \\MongoRegex('\/' . $query . '\/i');$/;"	v
regexp	Document/TopicRepository.php	/^        $regexp = new \\MongoRegex('\/' . $query . '\/i');$/;"	v
replaceClassMetadatadaAssociationMappingTargetEntity	Doctrine/ORM/ClassMetadataListener.php	/^    protected function replaceClassMetadatadaAssociationMappingTargetEntity(ClassMetadata $classMetadata, $field, $targetEntity)$/;"	f
replaceClassMetadatadaFieldMappingTargetDocument	Doctrine/ODM/ClassMetadataListener.php	/^    protected function replaceClassMetadatadaFieldMappingTargetDocument(ClassMetadata $classMetadata, $field, $targetDocument)$/;"	f
repository	Form/ValueTransformer/DoctrineObjectTransformer.php	/^        $this->repository = $repository;$/;"	v
repository	Form/ValueTransformer/DoctrineObjectTransformer.php	/^      $this->repository = $repository;$/;"	v
repository	Form/ValueTransformer/DoctrineObjectTransformer.php	/^    protected $repository = null;$/;"	v
repository	Tests/Model/CategoryRepositoryTest.php	/^        $repository = $om->getRepository('ForumBundle:Category');$/;"	v
repository	Tests/Model/PostRepositoryTest.php	/^        $repository = $om->getRepository('ForumBundle:Post');$/;"	v
repository	Tests/Model/TopicRepositoryTest.php	/^        $repository = $om->getRepository('ForumBundle:Topic');$/;"	v
results	Controller/ForumController.php	/^                $results = $this['forum.post_repository']->search($search->query, true);$/;"	v
results	Controller/ForumController.php	/^        $results = null;$/;"	v
reverseTransform	Form/ValueTransformer/DoctrineObjectTransformer.php	/^    public function reverseTransform($value, $originalValue)$/;"	f
router	Templating/Helper/ForumHelper.php	/^        $this->router = $router;$/;"	v
router	Templating/Helper/ForumHelper.php	/^    protected $router;$/;"	v
runCommand	Test/WebTestCase.php	/^    protected function runCommand($name, array $params = array())$/;"	f
savePost	Controller/PostController.php	/^    public function savePost(Post $post)$/;"	f
saveTopic	Controller/TopicController.php	/^    public function saveTopic(Topic $topic)$/;"	f
search	Controller/ForumController.php	/^        $search = new Search();$/;"	v
search	Document/PostRepository.php	/^    public function search($query, $asPaginator = false)$/;"	f
search	Document/TopicRepository.php	/^    public function search($query, $asPaginator = false)$/;"	f
search	Entity/PostRepository.php	/^    public function search($query, $asPaginator = false)$/;"	f
search	Entity/TopicRepository.php	/^    public function search($query, $asPaginator = false)$/;"	f
search	Model/PostRepositoryInterface.php	/^    public function search($query, $asPaginator);$/;"	f
search	Model/TopicRepositoryInterface.php	/^    public function search($query, $asPaginator);$/;"	f
searchAction	Controller/ForumController.php	/^    public function searchAction()$/;"	f
setAsCategoryLastTopic	Model/Topic.php	/^    public function setAsCategoryLastTopic()$/;"	f
setAuthor	Model/Post.php	/^    public function setAuthor($author)$/;"	f
setAuthor	Model/Topic.php	/^    public function setAuthor($author)$/;"	f
setCategory	Model/Topic.php	/^    public function setCategory(Category $category = null)$/;"	f
setCreatedAt	Model/Post.php	/^    public function setCreatedAt(\\DateTime $date)$/;"	f
setCreatedNow	Model/Post.php	/^    public function setCreatedNow()$/;"	f
setCreatedNow	Model/Topic.php	/^    public function setCreatedNow()$/;"	f
setDescription	Model/Category.php	/^    public function setDescription($description)$/;"	f
setFirstPost	Model/Topic.php	/^    public function setFirstPost(Post $post)$/;"	f
setIsBuried	Model/Topic.php	/^    public function setIsBuried($isBuried)$/;"	f
setIsClosed	Model/Topic.php	/^    public function setIsClosed($isClosed)$/;"	f
setIsPinned	Model/Topic.php	/^    public function setIsPinned($isPinned)$/;"	f
setLastPost	Model/Category.php	/^    public function setLastPost(Post $post)$/;"	f
setLastTopic	Model/Category.php	/^    public function setLastTopic(Topic $topic)$/;"	f
setMessage	Model/Post.php	/^    public function setMessage($message)$/;"	f
setName	Model/Category.php	/^    public function setName($name)$/;"	f
setNumPosts	Model/Category.php	/^    public function setNumPosts($numPosts)$/;"	f
setNumPosts	Model/Topic.php	/^    public function setNumPosts($numPosts)$/;"	f
setNumTopics	Model/Category.php	/^    public function setNumTopics($numTopics)$/;"	f
setNumViews	Model/Topic.php	/^    public function setNumViews($numViews)$/;"	f
setNumber	Model/Post.php	/^    public function setNumber($number)$/;"	f
setPosition	Model/Category.php	/^    public function setPosition($position)$/;"	f
setRepository	Form/ValueTransformer/DoctrineObjectTransformer.php	/^    public function setRepository($repository)$/;"	f
setSlug	Model/Category.php	/^    public function setSlug($slug)$/;"	f
setSubject	Model/Topic.php	/^    public function setSubject($subject)$/;"	f
setTopic	Model/Post.php	/^    public function setTopic($topic)$/;"	f
setUp	Test/WebTestCase.php	/^    public function setUp()$/;"	f
setUp	Tests/Model/CategoryRepositoryTest.php	/^    public function setUp()$/;"	f
setUp	Tests/Model/CategoryTest.php	/^    public function setUp()$/;"	f
setUp	Tests/Model/PostRepositoryTest.php	/^    public function setUp()$/;"	f
setUp	Tests/Model/PostTest.php	/^    public function setUp()$/;"	f
setUp	Tests/Model/TopicRepositoryTest.php	/^    public function setUp()$/;"	f
setUp	Tests/Model/TopicTest.php	/^    public function setUp()$/;"	f
setUpdatedNow	Model/Post.php	/^    public function setUpdatedNow()$/;"	f
showAction	Controller/CategoryController.php	/^    public function showAction($slug)$/;"	f
showAction	Controller/TopicController.php	/^    public function showAction($categorySlug, $id)$/;"	f
slug	Model/Category.php	/^        $this->slug = Inflector::slugify($slug);$/;"	v
slug	Model/Category.php	/^    protected $slug;$/;"	v
slugify	Util/Inflector.php	/^    public static function slugify($text)$/;"	f
strings	Tests/Model/TopicRepositoryTest.php	/^        $strings = array();$/;"	v
subject	Model/Topic.php	/^        $this->subject = $subject;$/;"	v
subject	Model/Topic.php	/^    protected $subject;$/;"	v
t1	Tests/Model/TopicRepositoryTest.php	/^        $t1 = $this->createTopic('t1', $c1);$/;"	v
t2	Tests/Model/TopicRepositoryTest.php	/^        $t2 = $this->createTopic('t2', $c1);$/;"	v
t3	Tests/Model/TopicRepositoryTest.php	/^        $t3 = $this->createTopic('t3', $c1);$/;"	v
t4	Tests/Model/TopicRepositoryTest.php	/^        $t4 = $this->createTopic('t4', $c2);$/;"	v
testAuthorClass	Tests/Model/PostTest.php	/^    public function testAuthorClass()$/;"	f
testCategory	Tests/Model/TopicTest.php	/^    public function testCategory()$/;"	f
testCategoryClass	Tests/Model/TopicTest.php	/^    public function testCategoryClass()$/;"	f
testCreatedAt	Tests/Model/PostTest.php	/^    public function testCreatedAt()$/;"	f
testCreatedAt	Tests/Model/TopicTest.php	/^    public function testCreatedAt()$/;"	f
testFindAll	Tests/Model/CategoryRepositoryTest.php	/^    public function testFindAll()$/;"	f
testFindAll	Tests/Model/TopicRepositoryTest.php	/^    public function testFindAll()$/;"	f
testFindLatestPosted	Tests/Model/TopicRepositoryTest.php	/^    public function testFindLatestPosted()$/;"	f
testFindOneById	Tests/Model/PostRepositoryTest.php	/^    public function testFindOneById()$/;"	f
testFindOneById	Tests/Model/TopicRepositoryTest.php	/^    public function testFindOneById()$/;"	f
testFindOneBySlug	Tests/Model/CategoryRepositoryTest.php	/^    public function testFindOneBySlug()$/;"	f
testFirstPost	Tests/Model/TopicTest.php	/^    public function testFirstPost()$/;"	f
testFirstPostClass	Tests/Model/TopicTest.php	/^    public function testFirstPostClass()$/;"	f
testFunctionalPulledAt	Tests/Model/TopicTest.php	/^    public function testFunctionalPulledAt()$/;"	f
testGetAllMetadata	Tests/Model/MetadataTest.php	/^    public function testGetAllMetadata()$/;"	f
testGetTopic	Tests/Model/PostTest.php	/^    public function testGetTopic()$/;"	f
testIsBuried	Tests/Model/TopicTest.php	/^    public function testIsBuried()$/;"	f
testIsClosed	Tests/Model/TopicTest.php	/^    public function testIsClosed()$/;"	f
testIsPinned	Tests/Model/TopicTest.php	/^    public function testIsPinned()$/;"	f
testLastPost	Tests/Model/TopicTest.php	/^    public function testLastPost()$/;"	f
testLastPostClass	Tests/Model/CategoryTest.php	/^    public function testLastPostClass()$/;"	f
testLastPostClass	Tests/Model/TopicTest.php	/^    public function testLastPostClass()$/;"	f
testLastPostIsSaved	Tests/Model/CategoryTest.php	/^    public function testLastPostIsSaved()$/;"	f
testLastPostIssueWhenPostIsNotPersisted	Tests/Model/TopicTest.php	/^    public function testLastPostIssueWhenPostIsNotPersisted()$/;"	f
testLastTopicClass	Tests/Model/CategoryTest.php	/^    public function testLastTopicClass()$/;"	f
testMessage	Tests/Model/PostTest.php	/^    public function testMessage()$/;"	f
testName	Tests/Model/CategoryTest.php	/^    public function testName()$/;"	f
testNumPosts	Tests/Model/CategoryTest.php	/^    public function testNumPosts()$/;"	f
testNumPosts	Tests/Model/TopicTest.php	/^    public function testNumPosts()$/;"	f
testNumTopics	Tests/Model/CategoryTest.php	/^    public function testNumTopics()$/;"	f
testNumViews	Tests/Model/TopicTest.php	/^    public function testNumViews()$/;"	f
testNumberIsIncremented	Tests/Model/PostTest.php	/^    public function testNumberIsIncremented()$/;"	f
testObjectClass	Tests/Model/CategoryTest.php	/^    public function testObjectClass()$/;"	f
testObjectClass	Tests/Model/PostTest.php	/^    public function testObjectClass()$/;"	f
testObjectClass	Tests/Model/TopicTest.php	/^    public function testObjectClass()$/;"	f
testPosition	Tests/Model/CategoryTest.php	/^    public function testPosition()$/;"	f
testPulledAt	Tests/Model/TopicTest.php	/^    public function testPulledAt()$/;"	f
testSlugGeneration	Tests/Model/CategoryTest.php	/^    public function testSlugGeneration()$/;"	f
testSlugify	Tests/Util/InflectorTest.php	/^    public function testSlugify()$/;"	f
testSubject	Tests/Model/TopicTest.php	/^    public function testSubject()$/;"	f
testTimestamps	Tests/Model/PostTest.php	/^    public function testTimestamps()$/;"	f
testTopicClass	Tests/Model/PostTest.php	/^    public function testTopicClass()$/;"	f
testUpdatedAt	Tests/Model/PostTest.php	/^    public function testUpdatedAt()$/;"	f
text	Util/Inflector.php	/^            $text = iconv('utf-8', 'us-ascii\/\/TRANSLIT', $text);$/;"	v
text	Util/Inflector.php	/^        $text = preg_replace('~[^-\\w]+~', '', $text);$/;"	v
text	Util/Inflector.php	/^        $text = preg_replace('~[^\\\\pL\\d]+~u', '-', $text);$/;"	v
text	Util/Inflector.php	/^        $text = strtolower($text);$/;"	v
text	Util/Inflector.php	/^        $text = trim($text, '-');$/;"	v
topic	Controller/PostController.php	/^        $topic = $this['forum.topic_repository']->findOneById($topicId);$/;"	v
topic	Controller/TopicController.php	/^        $topic = $form->getData();$/;"	v
topic	Controller/TopicController.php	/^        $topic = $topicRepository->findOneById($id);$/;"	v
topic	Controller/TopicController.php	/^        $topic = new $topicClass();$/;"	v
topic	Model/Post.php	/^        $this->topic = $topic;$/;"	v
topic	Model/Post.php	/^    protected $topic;$/;"	v
topic	Tests/Model/CategoryTest.php	/^        $topic = new $this->topicClass();$/;"	v
topic	Tests/Model/PostRepositoryTest.php	/^        $topic = new $this->topicClass();$/;"	v
topic	Tests/Model/PostTest.php	/^        $topic = $class->getFieldMapping('topic');$/;"	v
topic	Tests/Model/PostTest.php	/^        $topic = new $this->topicClass();$/;"	v
topic	Tests/Model/TopicRepositoryTest.php	/^        $topic = new $this->topicClass();$/;"	v
topic	Tests/Model/TopicTest.php	/^        $topic = $om->getRepository('ForumBundle:Topic')->find($topic->getId());$/;"	v
topic	Tests/Model/TopicTest.php	/^        $topic = $this->getService('forum.topic_repository')->find($topic->getId());$/;"	v
topic	Tests/Model/TopicTest.php	/^        $topic = new $this->topicClass($this->getMock($this->categoryClass));$/;"	v
topic	Tests/Model/TopicTest.php	/^        $topic = new $this->topicClass();$/;"	v
topic1	Tests/Model/TopicRepositoryTest.php	/^        $topic1 = new $this->topicClass($category);$/;"	v
topic2	Tests/Model/TopicRepositoryTest.php	/^        $topic2 = new $this->topicClass();$/;"	v
topic3	Tests/Model/TopicRepositoryTest.php	/^        $topic3 = new $this->topicClass();$/;"	v
topicClass	Controller/TopicController.php	/^        $topicClass = $this['forum.topic_repository']->getObjectClass();$/;"	v
topicClass	Test/WebTestCase.php	/^        $this->topicClass = $om->getRepository('ForumBundle:Topic')->getObjectClass();$/;"	v
topicClass	Test/WebTestCase.php	/^    protected $topicClass;$/;"	v
topicFormClass	Controller/TopicController.php	/^        $topicFormClass = $this->container->getParameter('forum.topic_form.class');$/;"	v
topicPage	Templating/Helper/ForumHelper.php	/^        $topicPage = ceil($post->getNumber() \/ $this->nbPostsPerPage);$/;"	v
topicPage	Templating/Helper/ForumHelper.php	/^        $topicPage = ceil($topic->getNumPosts() \/ $this->nbPostsPerPage);$/;"	v
topicRepository	Controller/TopicController.php	/^        $topicRepository = $this['forum.topic_repository'];$/;"	v
topicUrl	Templating/Helper/ForumHelper.php	/^        $topicUrl = $this->urlForTopic($post->getTopic(), $absolute);$/;"	v
topicUrl	Templating/Helper/ForumHelper.php	/^        $topicUrl = $this->urlForTopic($topic);$/;"	v
topics	Controller/TopicController.php	/^            $topics = $this['forum.topic_repository']->findAll(true);$/;"	v
topics	Controller/TopicController.php	/^            $topics = $this['forum.topic_repository']->findAllByCategory($category, true);$/;"	v
topics	Tests/Model/TopicRepositoryTest.php	/^        $topics = $repository->findAll();$/;"	v
transform	Form/ValueTransformer/DoctrineObjectTransformer.php	/^    public function transform($value)$/;"	f
updateNumber	Model/Post.php	/^    public function updateNumber()$/;"	f
updatePulledAt	Model/Topic.php	/^    public function updatePulledAt()$/;"	f
updatedAt	Model/Post.php	/^        $this->updatedAt = new \\DateTime('now');$/;"	v
updatedAt	Model/Post.php	/^    protected $updatedAt;$/;"	v
url	Controller/PostController.php	/^        $url = $this['templating.helper.forum']->urlForPost($post);$/;"	v
url	Controller/TopicController.php	/^        $url = $this['templating.helper.forum']->urlForTopic($topic);$/;"	v
urlFor	Templating/Helper/ForumHelper.php	/^    public function urlFor($object = null, $absolute = false)$/;"	f
urlForCategory	Templating/Helper/ForumHelper.php	/^    public function urlForCategory(Category $category, $absolute = false)$/;"	f
urlForCategoryAtomFeed	Templating/Helper/ForumHelper.php	/^    public function urlForCategoryAtomFeed(Category $category, $absolute = false)$/;"	f
urlForIndex	Templating/Helper/ForumHelper.php	/^    public function urlForIndex($absolute = false)$/;"	f
urlForPost	Templating/Helper/ForumHelper.php	/^    public function urlForPost(Post $post, $absolute = false)$/;"	f
urlForTopic	Templating/Helper/ForumHelper.php	/^    public function urlForTopic(Topic $topic, $absolute = false)$/;"	f
urlForTopicAtomFeed	Templating/Helper/ForumHelper.php	/^    public function urlForTopicAtomFeed(Topic $topic, $absolute = false)$/;"	f
urlForTopicReply	Templating/Helper/ForumHelper.php	/^    public function urlForTopicReply(Topic $topic, $absolute = false)$/;"	f
urlForUser	Templating/Helper/ForumHelper.php	/^    public function urlForUser(User $user, $absolute = false)$/;"	f
user	Controller/PostController.php	/^        $user = $this['doctrine_user.auth']->getUser();$/;"	v
user	Controller/TopicController.php	/^        $user = $this['doctrine_user.auth']->getUser();$/;"	v
userClass	Tests/Model/PostTest.php	/^        $userClass = $this->getService('doctrine_user.user_repository')->getObjectClass();$/;"	v
validateBeforePersist	Model/Topic.php	/^    public function validateBeforePersist()$/;"	f
vars	Tests/Model/TopicRepositoryTest.php	/^        $vars = array_values(array_diff($after, $before));$/;"	v
